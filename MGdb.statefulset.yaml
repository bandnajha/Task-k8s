apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: database
spec:
  serviceName: "mongodb-headless"
  replicas: 2
  UpdateStrategy:
      type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io./name : mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
         app.kubernetes.io./name : mongodb
         app.kubernetes.io/component: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: password
        volumeMounts:
        - name: pvc
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

lifecycle:
  postStart:
    exec:
      command:
      - /bin/sh
      - -c
      - |
        mongo --eval "rs.initiate();"
        sleep 10
        mongo --eval "rs.add('mongodb-1.mongodb.default.svc.cluster.local')"
        sleep 10
        mongo --eval "rs.add('mongodb-2.mongodb.default.svc.cluster.local')"
        sleep 10
        mongo --eval "rs.add('mongodb-3.mongodb.default.svc.cluster.local')"
        sleep 10
        mongo --eval "db.createUser({ user: '$(MONGO_INITDB_ROOT_USERNAME)', pwd: '$(MONGO_INITDB_ROOT_PASSWORD)', roles: [{ role: 'readWrite', db: 'admin' }]})"

          
